// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name DCKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import DCKit
import Foundation
import SDWebImage
import SnapKit
import Swift
import UIKit
import YYKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension Swift.String {
  public func toHtml(preText: Swift.Bool = false) -> Foundation.NSAttributedString?
  public var htmlToString: Swift.String {
    get
  }
}
extension UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public func addShadowInSuperView()
  @_Concurrency.MainActor @preconcurrency public func addShadow(shadowColor: UIKit.UIColor = UIColor.black.withAlphaComponent(0.4), shadowOpacity: Swift.Float = 0.15, shadowOffset: CoreFoundation.CGSize = CGSize.zero, shadowRadius: CoreFoundation.CGFloat = 5, corners: UIKit.UIRectCorner = .allCorners, cornerRadii: CoreFoundation.CGSize = CGSize(width: 10, height: 10))
}
extension Dispatch.DispatchQueue {
  public class func once(file: Swift.String = #file, function: Swift.String = #function, line: Swift.Int = #line, block: () -> Swift.Void)
}
extension Swift.String {
  public func nsRange(from range: Swift.Range<Swift.String.Index>) -> Foundation.NSRange
  public func range(from nsRange: Foundation.NSRange) -> Swift.Range<Swift.String.Index>?
  public func getWidth(_ font: UIKit.UIFont) -> CoreFoundation.CGFloat
  public func getHeightWithWidth(_ width: CoreFoundation.CGFloat, _ font: UIKit.UIFont) -> CoreFoundation.CGFloat
}
@objc @_inheritsConvenienceInitializers @objcMembers public class DCCommon : ObjectiveC.NSObject {
  @objc public static var keyWindow: UIKit.UIWindow? {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
